<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OrderWpf"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="OrderWpf.CreateTest"
        mc:Ignorable="d"
        Title="Генератор тестов" Height="600" Width="1000" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="Icon.png">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="ComboBox.Static.Background">
            <GradientStop Color="#FF91DDEB" Offset="0.0"/>
            <GradientStop Color="#FF91DDEB" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush Color="#FFBD9FDF" x:Key="ComboBox.Static.Border"/>
        <SolidColorBrush Color="#FFD4D4D4" x:Key="ComboBox.Static.Editable.Background"/>
        <SolidColorBrush Color="#FFABADB3" x:Key="ComboBox.Static.Editable.Border"/>
        <SolidColorBrush Color="#FFD4D4D4" x:Key="ComboBox.Static.Editable.Button.Background"/>
        <SolidColorBrush Color="#FFD4D4D4" x:Key="ComboBox.Static.Editable.Button.Border"/>
        <SolidColorBrush Color="#FF000000" x:Key="ComboBox.MouseOver.Glyph"/>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="ComboBox.MouseOver.Background">
            <GradientStop Color="#FFBD9FDF" Offset="0.0"/>
            <GradientStop Color="#FFBD9FDF" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush Color="#FFBD9FDF" x:Key="ComboBox.MouseOver.Border"/>
        <SolidColorBrush Color="#FFBD9FDF" x:Key="ComboBox.MouseOver.Editable.Background"/>
        <SolidColorBrush Color="#FFBD9FDF" x:Key="ComboBox.MouseOver.Editable.Border"/>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="ComboBox.MouseOver.Editable.Button.Background">
            <GradientStop Color="#FFBD9FDF" Offset="0.0"/>
            <GradientStop Color="#FFBD9FDF" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush Color="#FFBD9FDF" x:Key="ComboBox.MouseOver.Editable.Button.Border"/>
        <SolidColorBrush Color="#FF000000" x:Key="ComboBox.Pressed.Glyph"/>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="ComboBox.Pressed.Background">
            <GradientStop Color="#FFA777DC" Offset="0.0"/>
            <GradientStop Color="#FFA777DC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFA777DC"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFA777DC"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FFA777DC"/>
        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0" x:Key="ComboBox.Pressed.Editable.Button.Background">
            <GradientStop Color="#FFA777DC" Offset="0.0"/>
            <GradientStop Color="#FFA777DC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush Color="#FFA777DC" x:Key="ComboBox.Pressed.Editable.Button.Border"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot"  CornerRadius="15" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" CornerRadius="15" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 8,8 L 16,0 L 16,-5.3 L 8,2.65 L0,-5.34 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" CornerRadius="15" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" CornerRadius="15" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" CornerRadius="15" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBD9FDF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFBD9FDF"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFA777DC"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFA777DC"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF91DDEB"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FF91DDEB"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF7EB9DB"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" FontSize="20"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFC7C3C3"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" IsEnabled="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="42"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="40"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,3,0,3">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 29.92494,3.67002L 14.0949,27.29502L 13.56492,27.29502L 0,15.57993 3.82992,10.56495L 12.765,18.26499L 24.99993,4.6e-005L 29.92494,3.67002 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" Margin="5,12,5,13" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="BackgroundImage.jpg"/>
    </Window.Background>
    <Grid x:Name="MainGrid">
        <Grid x:Name="AddRecord_Grid" HorizontalAlignment="Left" Height="571" VerticalAlignment="Top" Width="994" Background="#00000000" Visibility="Hidden">
            <TextBox x:Name="AddRecord_TextBox" HorizontalAlignment="Left" Height="60" Margin="41,236,0,0" TextWrapping="Wrap"  FontFamily="Monotype Corsiva" FontSize="48" VerticalAlignment="Top" Width="689" Style="{DynamicResource TextBoxStyle}" Background="#FF91DDEB" Foreground="#FF444444" BorderBrush="#FF91DDEB" SelectionBrush="Black"/>
            <Button x:Name="AddRecord_Button" Content="Добавить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="735,236,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="AddRecord_Click"/>
            <Label x:Name="AddRecord_Label" Content="Введите наименование дисциплины" HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="41,181,209,0" Height="50"/>
            <Button x:Name="CancelRecord_Button1" Content="Назад" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="849,236,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="Cancel_Click"/>
            <Label x:Name="AddMenu_Label" Content="Добавление записи" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="994"/>
        </Grid>
        <Grid x:Name="EditRecord_Grid" HorizontalAlignment="Left" Height="571" VerticalAlignment="Top" Width="994" Background="#00000000" Visibility="Hidden">
            <Label x:Name="EditMenu_Label" Content="Изменение записи" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="994"/>
            <Label x:Name ="EditRecord_Label" Content="Измененить" HorizontalAlignment="Center" Margin="41,186,36,0" HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Width="917"/>
            <TextBox x:Name="EditRecord_TextBox" Style="{DynamicResource TextBoxStyle}" FontFamily="Monotype Corsiva" FontSize="48" HorizontalAlignment="Left" Margin="41,236,0,275" TextWrapping="Wrap" VerticalAlignment="Center" Width="689" Height="60" Background="#FF91DDEB" Foreground="#FF444444" BorderBrush="#FF91DDEB" SelectionBrush="Black"/>
            <Button x:Name="EditRecord_Button" Content="Изменить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="735,236,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" 
                    Click="EditRecord_Click"/>
            <Button x:Name="CancelRecord_Button3" Content="Назад" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="849,236,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" 
                    Click="Cancel_Click"/>
        </Grid>
        <Grid x:Name="DeleteRecord_Grid" HorizontalAlignment="Left" Height="571" VerticalAlignment="Top" Width="994" Background="#00000000" Visibility="Hidden">
            <Label x:Name="DeleteMenu_Label" Content="Удаление записи" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="994"/>
            <Button x:Name="DeleteRecord_Button" Content="Да" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="390,264,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="DeleteRecord_Click"/>
            <Label x:Name="DeleteRecord_Label" Content="" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="9,194,11,0" Height="50"/>
            <Button x:Name="CancelRecord_Button2__Button2" Content="Нет" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="504,264,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="Cancel_Click"/>
        </Grid>
        <Grid x:Name="PreparationTest_Grid" HorizontalAlignment="Left" Height="571" VerticalAlignment="Top" Width="994" 
              Visibility="Visible">
            <Grid.Background>
                <ImageBrush ImageSource="BackgroundImage.jpg"/>
            </Grid.Background>
            <Button x:Name="Next_Button" Content="Далее" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="72" Margin="505,416,0,0" VerticalAlignment="Top" Width="373" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" 
                    Click="Next_Click"/>
            <Label x:Name="MainMenu_Label" Content="Составление теста" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="994"/>
            <Label x:Name="Discipline_Label" Content="Выберите дисциплину теста" HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="41,90,209,0" Height="50"/>
            <Label x:Name="Theme_Label" Content="Выберите тему теста" HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="41,237,209,0" Height="49"/>
            <Button x:Name="Back_Button" Content="В главное&#xA;    меню" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="72" Margin="132,416,0,0" VerticalAlignment="Top" Width="371" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" 
                    Click="Back_Click" BorderBrush="#00000000" Foreground="#FF444444"/>
            <Button x:Name="AddDiscipline_Button" Content="Добавить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="625,140,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="AddDiscipline_Click"/>
            <Button x:Name="DelDiscipline_Button" Content="Удалить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="739,140,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.5,0.5" 
                    Click="DeleteDiscipline_Click"/>
            <Button x:Name="EditDiscipline_Button" Content="Изменить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="853,140,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="EditDiscipline_Click"/>
            <Button x:Name="AddTheme_Button" Content="Добавить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="625,286,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="AddTheme_Click"/>
            <Button x:Name="DelTheme_Button" Content="Удалить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="739,286,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="DeleteTheme_Click"/>
            <Button x:Name="EditTheme_Button" Content="Изменить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="853,286,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="EditTheme_Click"/>
            <ComboBox x:Name="Discipline_ComboBox" HorizontalAlignment="Left" Height="60" Margin="41,140,0,0" VerticalAlignment="Top"  FontFamily="Monotype Corsiva" Width="579" Style="{DynamicResource ComboBoxStyle}" Foreground="#FF444444" FontSize="48" IsTextSearchCaseSensitive="True"
                      DropDownClosed="Discipline_ComboBox_DropDownClosed" 
                      DropDownOpened="Discipline_ComboBox_DropDownOpened" />
            <ComboBox x:Name="Theme_ComboBox"  HorizontalAlignment="Left" Height="60" Margin="41,286,0,0" VerticalAlignment="Top"  FontFamily="Monotype Corsiva" Width="579" Style="{DynamicResource ComboBoxStyle}" Foreground="#FF444444" FontSize="48"
                      DropDownClosed="Theme_ComboBox_DropDownClosed" 
                      DropDownOpened="Theme_ComboBox_DropDownOpened">
                <ComboBox.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF0F0F0" Offset="0"/>
                        <GradientStop Color="White" Offset="1"/>
                    </LinearGradientBrush>
                </ComboBox.Background>
            </ComboBox>
        </Grid>
        <Grid x:Name="Question_Grid" HorizontalAlignment="Left" Height="571" VerticalAlignment="Top" 
              Width="994" Background="#00000000" Visibility="Hidden">
            <Label x:Name="QuestionMenu_Label" Content="Меню составления теста" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="994"/>
            <Label x:Name="Num_Of_Answer" Content="1" HorizontalContentAlignment="Center" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="48" Background="{x:Null}" Foreground="White" HorizontalAlignment="Left" Width="54" Margin="919,317,0,0" Height="82"/>
            <ComboBox x:Name="Answer_ComboBox" HorizontalAlignment="Left" Height="100" Margin="41,299,0,0" VerticalAlignment="Top"  FontFamily="Monotype Corsiva" Width="878" Style="{DynamicResource ComboBoxStyle}" Foreground="#FF444444" FontSize="48" IsEditable="False" 
                      DropDownOpened="Answer_ComboBox_DropDownOpened" 
                      DropDownClosed="Answer_ComboBox_DropDownClosed" 
                      KeyUp="Answer_ComboBox_KeyUp"
                      SelectionChanged="Answer_ComboBox_SelectionChanged">
                <ComboBox.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="Transparent" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </ComboBox.Background>
            </ComboBox>
            <Button x:Name="BackQuestion_Button" Content="Назад" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="72" Margin="132,416,0,0" VerticalAlignment="Top" Width="373" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" 
                    Click="BackQuestion_Button_Click"/>
            <Button x:Name="DoneQuestion_Button" Content="Готово" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="72" Margin="505,416,0,0" VerticalAlignment="Top" Width="371" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB"  BorderBrush="#00000000" Foreground="#FF444444"
                    Click="DoneQuestion_Button_Click"/>
            <Button x:Name="AddButtonAnswear" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="924,250,0,0" VerticalAlignment="Top" Width="50" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.5,0.5" 
                    Click="AddButtonAnswear_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="/Arrow.png" RenderTransformOrigin="0.5,0.5"/>
            </Button>
            <Button x:Name="SubtractionAnswear_Button" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="924,387,0,0" VerticalAlignment="Top" Width="50" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.5,0.5" 
                    Click="SubtractionAnswear_Button_Click">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="/Arrow.png" RenderTransformOrigin="0.5,0.5">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="180"></RotateTransform>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>
            </Button>
            <Label Content="Вопрос" HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="41,64,552,0"     Height="50"/>
            <Label Content="Ответ"  HorizontalContentAlignment="Left" VerticalAlignment="Top" FontFamily="Monotype Corsiva" FontSize="36" Background="{x:Null}" Foreground="White" Margin="41,236,614,0"    Height="50"/>
            <Button x:Name="AddQuestion_Button" Content="Добавить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="625,59,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.172,0.193" 
                    Click="AddQuestion_Button_Click"/>
            <Button x:Name="DelQuestion_Button" Content="Удалить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="738,59,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="DelQuestion_Button_Click"/>
            <Button x:Name="EditQuestion_Button" Content="Изменить" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Left" Height="60" Margin="852,59,0,0" VerticalAlignment="Top" Width="109" Style="{DynamicResource ButtonStyle}" FontSize="24" FontFamily="Monotype Corsiva" Background="#FF91DDEB" BorderBrush="#00000000" Foreground="#FF444444" RenderTransformOrigin="0.386,0.532" 
                    Click="EditQuestion_Button_Click"/>
            <ComboBox x:Name="Question_ComboBox" HorizontalAlignment="Left" Height="100" Margin="40,124,0,0" VerticalAlignment="Top"  FontFamily="Monotype Corsiva" Width="921" Style="{DynamicResource ComboBoxStyle}" Foreground="#FF444444" FontSize="48" IsTextSearchCaseSensitive="True"
                      SelectionChanged="Question_ComboBox_SelectionChanged" 
                      DropDownClosed="Question_ComboBox_DropDownClosed"
                      DropDownOpened="Question_ComboBox_DropDownOpened" 
                      />
            <CheckBox Style="{DynamicResource CheckBoxStyle}" x:Name="True_Answer_CheckBox" HorizontalAlignment="Left" Margin="335,242,0,0" VerticalAlignment="Top" Height="44" Width="584" FontSize="36" FontFamily="Monotype Corsiva" IsEnabled="True"
                       Checked="True_Answer_CheckBox_Checked" Unchecked="True_Answer_CheckBox_Unchecked" >
                <Label x:Name="True_Answer_Label" Content="Правильный ответ" Margin="0,-15,0,-16" Foreground="White"/>
            </CheckBox>
        </Grid>

    </Grid>

</Window>
